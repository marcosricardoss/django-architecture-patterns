version: '3'
services:
  # PROXY
  projec-proxy:
    container_name: todo-proxy
    image: "jwilder/nginx-proxy:latest"
    logging: { driver: none }
    ports: ["${PROXY_SERVICE_PORT}:80"]
    restart: always
    volumes: ["/var/run/docker.sock:/tmp/docker.sock:ro"]
  
  # PDADMIN 
  project-pgadmin:
    container_name: project-pgadmin
    depends_on: [todo-postgres]
    image: dpage/pgadmin4
    logging: { driver: none }
    ports: ["${PGADMIN_DEFAULT_PORT}:80"]
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD

  # REDIS
  project-redis:
    image: redis:latest
    container_name: project-redis
    restart: always    
    ports: ["${REDIS_SERVICE_PORT}:6379"]
  
  # TODO POSTGRE DATABASE
  todo-postgres:
    container_name: todo-postgres
    image: postgres:latest
    logging: { driver: none }
    ports: ["${TODO_POSTGRES_SERVICE_PORT}:5432"]
    restart: always
    volumes: [todo:/var/lib/postgresql/data]
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: $TODO_POSTGRES_SERVICE_DATABASE_NAME
      POSTGRES_PASSWORD: $TODO_POSTGRES_SERVICE_PASSWORD
      POSTGRES_USER: $TODO_POSTGRES_SERVICE_USER

  # TODO STATIC SERVER       
  todo-static:
    container_name: todo-static
    depends_on: [projec-proxy]
    environment: ['VIRTUAL_HOST=${TODO_SERVICE_STATIC_HOST}.${DOMAIN}']
    image: 'httpd:latest'
    logging: { driver: none }
    ports: ['80']
    restart: always
    volumes: ['./todo/static:/usr/local/apache2/htdocs']

  # TODO MEDIA SERVER
  todo-media:
    container_name: todo-media
    depends_on: [projec-proxy]
    environment: ['VIRTUAL_HOST=${TODO_SERVICE_MEDIA_HOST}.${DOMAIN}']
    image: 'httpd:latest'
    logging: { driver: none }
    ports: ['80']
    restart: always
    volumes: [./todo/media:/usr/local/apache2/htdocs']

  # TODO EVENT CONSUMER
  todo-web-event-consumer:    
    image: 'todo-web-app:latest'
    container_name: todo-web-event-consumer
    build:
      context: ./todo
      args: { BUILD_ENV: $ENV }
    restart: always
    command: > 
      bash -c "/usr/src/app/wait-for-it todo-postgres:5432 
      && /usr/src/app/wait-for-it project-redis:6379 
      && /usr/src/app/start-eventconsumer"
    volumes: &todo-app-volumes            
      - './libs:/usr/src/libs'
      - './todo:/usr/src/app'
    environment: &todo-app-environment
      DJANGO_USE_DEBUG: $TODO_DJANGO_USE_DEBUG
      DJANGO_USE_DEBUG_TOOLBAR: $TODO_DJANGO_USE_DEBUG_TOOLBAR      
      MEDIA_HOST: "${TODO_SERVICE_MEDIA_HOST}.${DOMAIN}"       
      POSTGRESQL_DATABASE: $TODO_POSTGRES_SERVICE_DATABASE_NAME
      POSTGRESQL_HOST: "todo-postgres"
      POSTGRESQL_PASSWORD: $TODO_POSTGRES_SERVICE_PASSWORD
      POSTGRESQL_PORT: $TODO_POSTGRES_SERVICE_PORT
      POSTGRESQL_USER: $TODO_POSTGRES_SERVICE_USER      
      PYTHONUNBUFFERED: 1      
      REDIS_HOST: project-redis
      REDIS_PORT: 6379
      SECRET_KEY: $SECRET_KEY      
      STATIC_HOST: "${TODO_SERVICE_STATIC_HOST}.${DOMAIN}"            
    depends_on: [projec-proxy, project-redis]
  
  # TODO APP
  todo-web-app:
    ports: ['$TODO_SERVICE_PORT:8000']
    image: 'todo-web-app:latest'
    container_name: todo-web-app    
    command: > 
      bash -c "/usr/src/app/wait-for-it todo-postgres:5432 
      && /usr/src/app/wait-for-it project-redis:6379 
      && /usr/src/app/start"
    volumes: *todo-app-volumes
    environment:      
      <<: *todo-app-environment
      SITE_HOST: "${TODO_SERVICE_HOST}.${DOMAIN}"      
      VIRTUAL_HOST: "${TODO_SERVICE_HOST}.${DOMAIN}"
      VIRTUAL_PORT: 8000   
    depends_on: [projec-proxy, todo-postgres, todo-web-event-consumer]  

  # TODO API APP EVENT CONSUMER
  todo-api-event-consumer:
    image: todo-api-app:latest
    container_name: todo-api-event-consumer
    build:
      context: ./todoapi
      args: { BUILD_ENV: $ENV }
    restart: always
    command: > 
      bash -c "/usr/src/app/wait-for-it project-redis:6379 && 
      /usr/src/app/start-eventconsumer"
    volumes: &todo-api-app-volumes
      - './todoapi:/usr/src/app'
      - './libs:/usr/src/libs'
    environment: &todo-api-app-environment
      DATABASE_URL: "sqlite:////usr/src/app/db.sqlite"
      FLASK_APP: app
      FLASK_ENV: $ENV        
      SECRET_KEY: $SECRET_KEY            
      REDIS_HOST: project-redis
      REDIS_PORT: 6379
      VIRTUAL_HOST: "${TODO_API_SERVICE_HOST}.${DOMAIN}"
      VIRTUAL_PORT: "${TODO_API_SERVICE_HOST}"
    depends_on: [projec-proxy, project-redis]
  
  # TODO API APP
  todo-api-app:
    container_name: todo-api-app
    restart: always    
    image: todo-api-app:latest    
    command: /usr/src/app/start
    ports: ['$TODO_API_SERVICE_PORT:8000']  
    depends_on: [projec-proxy, todo-api-event-consumer]
    volumes: *todo-api-app-volumes
    environment: *todo-api-app-environment
  
volumes:    
  todo:         